<!DOCTYPE html>
<html lang="en">
<%inc#include "../controllers/utils/timeDateHandler.h" %>
<%c++
auto attendanceStatusCode=@@.get<char>("attendanceStatusCode");
auto attendanceStatisticsAll=@@.get<std::map<std::string, std::string>>("attendanceStatisticShort");
auto attendanceStatusText = @@.get<std::string>("attendanceStatusText");
auto afterBreakFlag = @@.get<int>("afterBreakFlag");
auto showCalendarFlag = @@.get<int>("showCalendarFlag");
%>
<head>
    <meta charset="UTF-8">
    <link rel="stylesheet" href="/static/AttendanceCheck/attendanceCheck.css">
    <link rel="stylesheet" href="/static/AttendanceCheck/calendar.css">

    <title>Attendance check</title>
</head>
<body>

<div id="sidenav" class="column">
    <div class="sidenavHeader">

    </div>
    <div class="sidenavHeaderBottom">
        <a href="#" onclick="hideCalendar()">Attendance checking</a>
        <a href="#" onclick="renderCalendar(); showCalendar()">Attendance statistics</a>
    </div>
</div>

<div id="AttendanceContent" class="column">
    <!--<header>-->

    <div class="right_header">
        <!--                attendance-->
        <div class="dropdown">
            <button><img id="profileImg" alt="profile" src="/static/AttendanceCheck/img/profile_img.png" height="48px"
                         width="48px"></button>
            <div class="dropdown-content">
                <div class="profileButtons">
                    <form action="http://localhost:3000/userSettingsPage" method="post">
                        <button id="profileSetting">Profile setting</button>
                    </form>
                </div>
                <div class="profileButtons">
                    <form action="http://localhost:3000/start" method="get">
                        <button id="logOut">Log out</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
    <!--</header>-->

    <div class="trackingAttendanceGeneral" id="trackingAttendanceGeneral">

        <%c++ if((attendanceStatusCode == attendanceStatus::IN_TIME
        or attendanceStatusCode == attendanceStatus::LATE or afterBreakFlag == 1
        or attendanceStatusCode == attendanceStatus::FIRST_WORK_DAY_PRESENT)
         and (attendanceStatusText != "On break")) { %>
            <div class="youMustArrived" id="youMustArrived"> Your shift your shift ends at :</div>
                        <div id="mustArrivedTime">
                            <div class="mustArrivedTime">[[shiftFinish]]</div>
                        </div>
        <%c++ } else if(attendanceStatusText == "On break")  {%>
                <div class="youMustArrived" id="youMustArrived"> Break end at : </div>
                                        <div id="mustArrivedTime">
                                            <div class="mustArrivedTime">[[breakFinishTime]]</div>
                                        </div>
        <%c++ }else { %>
            <div class="youMustArrived" id="youMustArrived"> Recommend arrival time :</div>
                        <div id="mustArrivedTime">
                            <div class="mustArrivedTime">[[shiftStart]]</div>
                        </div>
        <%c++ } %>
        <div class="currTimeText" id="currTimeText"> Current time :</div>
        <div id="trackingAttendance">
            <div class="currTime"></div>
            <script>
                const currTime = document.querySelector(".currTime");

                function outPutCurrTime() {
                    let currDate = new Date();
                    let currHour = currDate.getHours();
                    let currMinute = currDate.getMinutes();

                    if (currHour < 10) {
                        currHour = '0' + currHour;
                    }

                    if (currMinute < 10) {
                        currMinute = '0' + currMinute;
                    }

                    let currTimeText = currHour + ":" + currMinute;

                    currTime.innerText = currTimeText;
                    return currTimeText;
                }

                outPutCurrTime();
                setInterval(outPutCurrTime, 60000);
            </script>

            <script>
                function clickOnArrivedButton() {
                    const currTimeText = document.getElementById('arrivedButton');
                    currTimeText.value = outPutCurrTime();
                }

                 function clickOnBreakButton() {
                                    const currTimeText = document.getElementById('breakButton');
                                    currTimeText.value = outPutCurrTime();
                 }

            </script>

        </div>

        <%c++ if(attendanceStatusCode == attendanceStatus::ABSENT or attendanceStatusCode == attendanceStatus::FIRST_WORK_DAY_ABSENT) {%>
        <form action="http://localhost:3000/confirmArrival" method="post">
            <button id="arrivedButton" name="currentTime" onclick="clickOnArrivedButton()">
                <div id="arrivedText">arrive</div>
            </button>

            <button id="breakButtonDisabled" disabled>
                        <div id="breakText">Break</div>
                    </button>
        </form>
        <%c++ } else if(attendanceStatusCode == attendanceStatus::LATE_CLOSED or
            attendanceStatusCode == attendanceStatus::IN_TIME_CLOSED or
            attendanceStatusCode == attendanceStatus::FIRST_DAY_CLOSED or
            attendanceStatusCode == attendanceStatus::OVERWORK or
            attendanceStatusCode == attendanceStatus::SHORTCOMINGS) {%>
                <button type="button" id="arrivedButtonDisabled" disabled>
                        <div id="arrivedText">finished</div>
                </button>
                <button id="breakButtonDisabled" disabled>
                            <div id="breakText">Break</div>
                        </button>
        <%c++ } else {%>
        <form action="http://localhost:3000/confirmEnding" method="post">
            <button id="arrivedButton" name="currentTime" onclick="clickOnArrivedButton()">
                <div id="arrivedText">finish</div>
            </button>
           </form>
               <%c++ if(attendanceStatusText != "On break" and afterBreakFlag != 1) {%>
                <form action="http://localhost:3000/takeBreak" method="post" onclick="clickOnBreakButton()">
            <button id="breakButton" name="currentTime">
                        <div id="breakText">Break</div>
                    </button>
                    </form>
              <%c++ }else if(afterBreakFlag == 1){ %>
              <button id="breakButtonDisabled" disabled>
                                      <div id="breakText">Break</div>
                                  </button>
              <%c++ } else{ %>
                 <form action="http://localhost:3000/endBreak" method="post" onclick="clickOnBreakButton()">
                   <button id="breakButton" name="currentTime" >
                     <div id="breakText">continue</div>
                   </button>
                 </form>
              <%c++ }%>

        <%c++}%>


        <div class="status" id="status"> Current status :</div>
        <div id="currStatus">
            <div class="currStatus">[[attendanceStatusText]]</div>
        </div>
    </div>
    <!---->
    <div class="calendarGeneral" id="calendarGeneral">
    <form style="margin-bottom: 0; display:flex;" action="http://localhost:3000/openTableViewPage" method="post">
                        <button class="tableViewButton">Table view</button>
                  </form>
        <div class="container">
            <div class="calendar">
                <div class="month">
                    <i class="fas fa-angle-left prev"><</i>
                    <div class="date">
                        <h1></h1>
                        <p></p>
                    </div>
                    <i class="fas fa-angle-right next">></i>
                </div>
                <div class="weekdays">
                    <div>Sun</div>
                    <div>Mon</div>
                    <div>Tue</div>
                    <div>Wed</div>
                    <div>Thu</div>
                    <div>Fri</div>
                    <div>Sat</div>
                </div>
                <div class="days"></div>
            </div>
        </div>
        <div class="days">

                    <div class="meaning_of_squares">
                        <div style="" class="overwork">1</div>
                    </div>
                    <p class="meaning_of_sq_text" style="margin-right:45px">- Overwork</p>

                    <div class="meaning_of_squares">
                        <div class="inTime">1</div>
                    </div>
                    <p class="meaning_of_sq_text" style="margin-right:45px">- In time</p>

                    <div class="meaning_of_squares">
                        <div class="late">1</div>
                    </div>
                    <p class="meaning_of_sq_text" style="margin-right:45px">- Late</p>

                    <div class="meaning_of_squares">
                        <div class="shortcomings">1</div>
                    </div>
                    <p class="meaning_of_sq_text" style="margin-right:45px">- Shortcomings</p>

                    <div class="meaning_of_squares">
                        <div class="absent">1</div>
                    </div>
                    <p class="meaning_of_sq_text" style="margin-right:45px">- Absent</p>

                    <div class="meaning_of_squares">
                        <div style="" class="firstDay">1</div>
                    </div>
                    <p class="meaning_of_sq_text" style="margin-right:45px">- First day</p>

                    <div class="meaning_of_squares">
                        <div style="" class="firstDayAbsent">1</div>
                    </div>
                    <p class="meaning_of_sq_text" style="margin-right:45px">- First day(absent)</p>

                    <div class="meaning_of_squares">
                        <div style="" class="anyGeneral">1</div>
                    </div>
                    <p class="meaning_of_sq_text" style="margin-right:45px">- Any status</p>

                    <div class="meaning_of_squares">
                        <div style="" class="any">1</div>
                    </div>
                    <p class="meaning_of_sq_text" style="margin-right:45px">- Any(day not closed)</p>




                    <!--        <div class="meaning_of_squares">-->
                    <!--            <div class="inTime">1</div>-->
                    <!--        </div>-->
                </div>
    </div>
</div>

<script>
    const date = new Date();

    function getCurrMonthStat(samePart, map) {
        let currMonthStat = " ";
        let currStatus ;
        for (let i = 1; i <= 31; ++i) {
            if(i < 10){
                currStatus = map.get(samePart + '-' + '0' + i);
            } else{
                currStatus = map.get(samePart + '-' + i);
            }
            if (currStatus !== undefined) {
                currMonthStat += currStatus;
            } else{
                currMonthStat += '-';
            }
        }
        return currMonthStat;
    }

    function renderCalendar() {

        date.setDate(1);
        const monthDays = document.querySelector(".days");

        const lastDay = new Date(
            date.getFullYear(),
            date.getMonth() + 1,
            0
        ).getDate();

        const prevLastDay = new Date(
            date.getFullYear(),
            date.getMonth(),
            0
        ).getDate();
        const firstDayIndex = date.getDay();

        const lastDayIndex = new Date(
            date.getFullYear(),
            date.getMonth() + 1,
            0
        ).getDay();

        const nextDays = 7 - lastDayIndex - 1;

        const months = [
            "January",
            "February",
            "March",
            "April",
            "May",
            "June",
            "July",
            "August",
            "September",
            "October",
            "November",
            "December",
        ];

        document.querySelector(".date h1").innerHTML = months[date.getMonth()] + " " + date.getFullYear();

        document.querySelector(".date p").innerHTML = new Date().toDateString();

        let days = "";

        for (let x = firstDayIndex; x > 0; x--) {
            days += `<div class="prev-date">${prevLastDay - x + 1}</div>`;
        }

        let attendanceStatisticsAllMap = new Map();
        <%c++ for (const auto &entry:attendanceStatisticsAll) { %>
            attendanceStatisticsAllMap.set('{%entry.first%}', '{%entry.second%}');
        <%c++ }%>

        console.log(attendanceStatisticsAllMap);

        let currentYear = date.getFullYear().toString();
        let currentMonth = date.getMonth() + 1;


        if(currentMonth < 10){
            currentMonth = '0' + currentMonth;
        }

        let attendanceStatisticsCurrMonth = getCurrMonthStat(currentYear + '-' + currentMonth, attendanceStatisticsAllMap);

        console.log(attendanceStatisticsCurrMonth);
        if (attendanceStatisticsCurrMonth !== undefined) {
                    for (let i = 1; i <= lastDay; i++) {
                        if (i < attendanceStatisticsCurrMonth.length) {
                            switch (attendanceStatisticsCurrMonth[i]) {
                                case 'm':
                                      days += `<div class="firstDayNotClose">${i}</div>`;
                                      break;
                                case 'l':
                                      days += `<div class="inTimeNotClose">${i}</div>`;
                                      break;
                                case 'k':
                                      days += `<div class="lateNotClose">${i}</div>`;
                                      break;
                                case 'k':
                                     days += `<div class="lateNotClose">${i}</div>`;
                                     break;
                                case 'j':
                                     days += `<div class="firstDay">${i}</div>`;
                                     break;
                                case 'i':
                                    days += `<div class="firstDay">${i}</div>`;
                                    break;
                                case 'h':
                                    days += `<div class="firstDayAbsent">${i}</div>`;
                                    break;
                                case 'g':
                                    days += `<div class="inTime">${i}</div>`;
                                    break;
                                case 'f':
                                    days += `<div class="late">${i}</div>`;
                                    break;
                                case 'e':
                                    days += `<div class="overwork">${i}</div>`;
                                    break;
                                case 'd':
                                    days += `<div class="inTime">${i}</div>`;
                                    break;
                                case 'c':
                                    days += `<div class="shortcomings">${i}</div>`;
                                    break;
                                case 'b':
                                    days += `<div class="late">${i}</div>`;
                                    break;
                                case 'a':
                                    days += `<div class="absent">${i}</div>`;
                                    break;
                                default:
                                    days += `<div>${i}</div>`;
                            }
                        } else {
                            days += `<div>${i}</div>`;
                        }
                    }
                } else {
                    for (let i = 1; i <= lastDay; i++) {
                        days += `<div>${i}</div>`;
                    }
                }

            for (let j = 1; j <= nextDays; j++) {
                days += `<div class="next-date">${j}</div>`;
            }
            monthDays.innerHTML = days;
        }


    document.querySelector(".prev").addEventListener("click", () => {
        date.setMonth(date.getMonth() - 1);
        renderCalendar();
    });

    document.querySelector(".next").addEventListener("click", () => {
        date.setMonth(date.getMonth() + 1);
        renderCalendar();
    });

    renderCalendar();

    hideCalendar();

    <%c++ if(showCalendarFlag == 1) {%>
         renderCalendar();
         showCalendar();
    <%c++ } %>
    function hideCalendar() {
        let attendance = document.querySelector('#trackingAttendanceGeneral');
        attendance.classList.remove('trackingAttendanceGeneral');
        let calendar = document.querySelector('#calendarGeneral');
        calendar.classList.add('calendarGeneral')
    }

    function showCalendar() {
        let attendance = document.querySelector('#calendarGeneral');
        attendance.classList.remove('calendarGeneral');
        let calendar = document.querySelector('#trackingAttendanceGeneral');
        calendar.classList.add('trackingAttendanceGeneral')
    }
</script>
</body>
</html>
